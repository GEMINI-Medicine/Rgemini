% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{find_db_tablename}
\alias{find_db_tablename}
\title{Find DB table name using regex search.}
\usage{
find_db_tablename(dbcon, drm_table, verbose = TRUE)
}
\arguments{
\item{dbcon}{(\code{DBIConnection})\cr
A database connection to any GEMINI database.}

\item{drm_table}{(\code{character})\cr
Table name to be searched, based on the DRM. Currently only accepts the
following inputs (which have been verified to work across different
DBs/datacuts):
\itemize{
\item \code{"admdad"}
\item \code{"ipdiagnosis"}
\item \code{"ipintervention"}
\item \code{"ipcmg"}
\item \code{"transfusion"}
\item \code{"lab"}
}

Users need to specify the full DRM table name (e.g., \code{"admdad"} instead of
\code{"adm"}) to avoid potential confusion with other tables.}

\item{verbose}{(\code{logical})\cr
Whether or not to show a message indicating which DB table was found.}
}
\value{
(\code{character})\cr
Returns the full name of the relevant DB table as a character.
}
\description{
Some \code{Rgemini} functions internally query DB tables. The table names cannot
be hard-coded in those functions since HPC datacuts sometimes have slightly
different table names (e.g., \code{admdad} is called \code{admdad_subset} in some
datacuts). This function uses a simple regex search to identify the full
table name in a given DB that matches the DRM (Data Reference Model) table
name of interest.

Currently, the function only supports a subset of table names (see below) and
expects the relevant tables in all databases to only differ based on their
suffix (e.g., "ipintervention" vs. "ipintervention_subset"). For some tables,
the function uses \code{grepl("^tablename", drm_table)} to look for table
names that \emph{start with} the same name as specified in DRM (e.g., any that
start with "ipintervention").
For other tables, the function uses a stricter search to avoid finding
multiple matches: Specifically, for "admdad", "lab", and "transfusion", the
function tries to identify tables with the exact same name (i.e.,
"admdad/lab/transfusion") or the corresponding table name with a "_subset"
suffix (for HPC datacuts).
}
\examples{
\dontrun{
drv <- dbDriver("PostgreSQL")
dbcon <- DBI::dbConnect(drv,
                        dbname = "db",
                        host = "172.XX.XX.XXX",
                        port = 1234,
                        user = getPass("Enter user:"),
                        password = getPass("password"))

admdad_name <- find_db_tablename(dbcon, "admdad")

# query identified table
admdad <- dbGetQuery(dbcon, paste0("select * from ", admdad_name, ";"))
}

}
